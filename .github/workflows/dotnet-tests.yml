name: Unit Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macOS-latest, windows-latest ]
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore Dependencies
      run: dotnet restore

    - name: Restore Dotnet Tools
      run: dotnet tool restore

    - name: Build
      run: dotnet build --no-restore

    - name: Import Test Certificate (Windows)
      if: runner.os == 'Windows'
      run: |
        $AppSettings = Get-Content '.\AdvancedSystems.Security.Tests\appsettings.json' -Raw | ConvertFrom-Json
        $StoreSettings = $AppSettings.Certificate.Store
        Import-Certificate -FilePath .\test.cer -CertStoreLocation "Cert:\$($StoreSettings.Location)\$($StoreSettings.Name)"
      shell: powershell

    - name: Import Test Certificate (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        appSettings='./AdvancedSystems.Security.Tests/appsettings.json'
        name=$(jq -r '.Certificate.Store.Name' $appSettings)
        location=$(jq -r '.Certificate.Store.Location' $appSettings)
        dotnet certificate-tool add -f ./test.cer --store-name $name --store-location $location

    - name: Import Test Certificate (MacOS)
      if: runner.os == 'macOS'
      run: |
        sudo security add-trusted-cert -d -r trustAsRoot -k /Library/Keychains/System.keychain test.cer

    - name: Test
      run: dotnet test --no-build --verbosity normal
